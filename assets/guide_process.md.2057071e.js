import{_ as s,c as a,o as l,a as e}from"./app.7df73375.js";const n="/paddle-flake8-project/assets/PR-popup.8b495df7.png",D=JSON.parse('{"title":"协作流程","description":"","frontmatter":{},"headers":[{"level":2,"title":"加入 Cattidea","slug":"加入-cattidea","link":"#加入-cattidea","children":[]},{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[{"level":3,"title":"安装 Flake8","slug":"安装-flake8","link":"#安装-flake8","children":[]},{"level":3,"title":"Clone Paddle","slug":"clone-paddle","link":"#clone-paddle","children":[]},{"level":3,"title":"尝试下 Flake8 命令","slug":"尝试下-flake8-命令","link":"#尝试下-flake8-命令","children":[]},{"level":3,"title":"安装 pre-commit","slug":"安装-pre-commit","link":"#安装-pre-commit","children":[]}]},{"level":2,"title":"开始修改代码～","slug":"开始修改代码","link":"#开始修改代码","children":[{"level":3,"title":"创建新分支","slug":"创建新分支","link":"#创建新分支","children":[]},{"level":3,"title":"修改代码","slug":"修改代码","link":"#修改代码","children":[]}]},{"level":2,"title":"PR 规范","slug":"pr-规范","link":"#pr-规范","children":[{"level":3,"title":"PR 标题","slug":"pr-标题","link":"#pr-标题","children":[]},{"level":3,"title":"PR 描述","slug":"pr-描述","link":"#pr-描述","children":[]}]}],"relativePath":"guide/process.md"}'),p={name:"guide/process.md"},t=e(`<h1 id="协作流程" tabindex="-1">协作流程 <a class="header-anchor" href="#协作流程" aria-hidden="true">#</a></h1><h2 id="加入-cattidea" tabindex="-1">加入 Cattidea <a class="header-anchor" href="#加入-cattidea" aria-hidden="true">#</a></h2><p>Flake8 小组整体的协作将会在 <a href="https://github.com/cattidea" target="_blank" rel="noreferrer">Cattidea</a> 组织中进行，以便相互之间协作，相关修改直接在 <a href="https://github.com/cattidea/Paddle" target="_blank" rel="noreferrer">cattidea/Paddle</a> <strong>新建分支</strong>修改即可，无需自己 fork。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>使用 cattidea 下 fork 的 Paddle 非强制，如果你更喜欢用自己 fork 好的 Paddle 的话，当然也是可以的～</p></div><h2 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备" aria-hidden="true">#</a></h2><h3 id="安装-flake8" tabindex="-1">安装 Flake8 <a class="header-anchor" href="#安装-flake8" aria-hidden="true">#</a></h3><p>我们使用的是 flake8 4.0.1 版本</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">flake8==4.0.1</span></span>
<span class="line"></span></code></pre></div><h3 id="clone-paddle" tabindex="-1">Clone Paddle <a class="header-anchor" href="#clone-paddle" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 直接 clone cattidea 下的 Paddle 即可</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/cattidea/Paddle.git</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 切换到 Paddle 目录，之后所有操作默认在此目录执行</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Paddle</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置 upstream 为 Paddle 官方 repo</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">remote</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">upstream</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/PaddlePaddle/Paddle.git</span></span>
<span class="line"></span></code></pre></div><h3 id="尝试下-flake8-命令" tabindex="-1">尝试下 Flake8 命令 <a class="header-anchor" href="#尝试下-flake8-命令" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 直接在 Paddle 根目录尝试运行</span></span>
<span class="line"><span style="color:#FFCB6B;">flake8</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 不出意外是没有任何输出的，说明现在 flake8 全部文件都正常～</span></span>
<span class="line"></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>有些时候可能因为未捕获的增量出现输出，如果输出的不是你所修复的错误码的话，先忽略就好，Nyakku 会尽快修复。</p></div><h3 id="安装-pre-commit" tabindex="-1">安装 pre-commit <a class="header-anchor" href="#安装-pre-commit" aria-hidden="true">#</a></h3><p>向 Paddle 贡献，pre-commit 的安装是必须的，如果不安装的话很容易会因为代码风格问题在 CI 卡住。</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 安装 pre-commit</span></span>
<span class="line"><span style="color:#FFCB6B;">pip</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">pre-commit==2.17.0</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在 Paddle 注册 pre-commit hook</span></span>
<span class="line"><span style="color:#FFCB6B;">pre-commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span></span>
<span class="line"></span></code></pre></div><h2 id="开始修改代码" tabindex="-1">开始修改代码～ <a class="header-anchor" href="#开始修改代码" aria-hidden="true">#</a></h2><p>这里以解决 <code>python/paddle/fluid/tests/unittests/collective</code> 目录全部 F401 错误码为例（<a href="https://github.com/PaddlePaddle/Paddle/pull/46615" target="_blank" rel="noreferrer">#46615</a>）</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>我们的修复包含全部 Python 文件（<code>.py</code> 扩展名），但不包含以下文件</p><ul><li><code>python/paddle/fluid/</code> 目录下的文件，但 <code>python/paddle/fluid/tests/</code> 目录要单独保留，因为前者包含了大量即将退场的 API 代码，因此暂不修复，而后者为单测目录，需要保留</li><li>自动生成的文件，如 <code>python/paddle/fluid/distributed/ps_pb2.py</code>，<code>_pb2.py</code> 后缀的文件大概率是利用 protoc 从 proto 文件自动生成的 protobuf 处理文件，因此不需要修复</li><li>第三方库，如 <code>python/paddle/utils/gast/</code>，这些是于 <a href="https://github.com/PaddlePaddle/Paddle/pull/34556" target="_blank" rel="noreferrer">#34556</a> 引入的第三方库</li></ul></div><h3 id="创建新分支" tabindex="-1">创建新分支 <a class="header-anchor" href="#创建新分支" aria-hidden="true">#</a></h3><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 创建新分支前，需要确认当前是在 develop 分支</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">branch</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 确认在 develop 后新建分支</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">switch</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-c</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branch_nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># &lt;branch_name&gt; 需要替换成分支名，如 F401/fix/unittests-collective</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 在 flake8 协作过程中尽可能使用上述的 &lt;做什么&gt;/&lt;fix 存量问题还是修改 config&gt;/&lt;修改范围&gt; 格式来命名一个分支</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 能够避免大家的分支名冲突，也可以让大家一眼知道这个分支在修改什么</span></span>
<span class="line"></span></code></pre></div><h3 id="修改代码" tabindex="-1">修改代码 <a class="header-anchor" href="#修改代码" aria-hidden="true">#</a></h3><p>这里可能做各种各样的修改，比如 F401 任务需要</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">autoflake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--in-place</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--remove-all-unused-imports</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--exclude=__init__.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-pass-after-docstring</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recursive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./python/paddle/fluid/tests/unittests/collective/</span></span>
<span class="line"></span></code></pre></div><p>这里利用 <code>autoflake</code> 将 <code>python/paddle/fluid/tests/unittests/collective/</code> 全部 F401 错误码都去除掉了～</p><p>之后我们就可以提交并 push 到远程仓库啦～</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">some description of this commit</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">origin</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">branch_nam</span><span style="color:#A6ACCD;">e</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>之后就可以去 <a href="https://github.com/cattidea/Paddle" target="_blank" rel="noreferrer">cattidea/Paddle</a> 提交 PR 啦～</p><p>不出意外你会在 repo 里看到一个弹出的 PR 提示：</p><p><img src="`+n+`" alt=""></p><p>此时直接点击 <code>Compare &amp; pull request</code> 即可创建一个 PR。</p><h2 id="pr-规范" tabindex="-1">PR 规范 <a class="header-anchor" href="#pr-规范" aria-hidden="true">#</a></h2><h3 id="pr-标题" tabindex="-1">PR 标题 <a class="header-anchor" href="#pr-标题" aria-hidden="true">#</a></h3><p>本任务均以 <code>[CodeStyle]</code> 标志作为开头，如果确定是修改某一个错误码，则后面加上错误码，如 <code>[F401]</code>，之后加上修改的描述。如 <code>[CodeStyle][F401] remove unused imports in unittests/collective</code></p><p>如果一个 PR 尚未完成，则在最前面加上 <code>[WIP]</code> 标志，如 <code>[WIP][CodeStyle][F401] remove unused imports in unittests/collective</code>，在完成后移除 <code>[WIP]</code> 标志</p><h3 id="pr-描述" tabindex="-1">PR 描述 <a class="header-anchor" href="#pr-描述" aria-hidden="true">#</a></h3><p>首先要遵守 Paddle PR 模板，否则无法通过 CheckPRTemplate 这一 CI 流水线。</p><p>在 <code>Describe</code> 部分详细描述做了什么修改，如果自动修改直接粘贴命令即可，如果手动修改应当详细说明修改原因和修改方式（更建议通过 review 的方式在手动修改的相关行上指出为什么这样修改，可以提高 reviewer 在 review 时候的效率，减少沟通成本）。</p><p>此外增加一项 <code>Related links</code>，使用<strong>列表</strong>放一些链接，需包含 tracking issue、修复了的 issue 等等（修复的链接需要使用 <code>fix</code> 等关键字才能正确链接）。</p><div class="tip custom-block"><p class="custom-block-title">为什么要用列表存放链接？</p><p>GitHub 对列表中的链接有更好的渲染方式，可以自动展开 PR 标题和状态，这样可以方便 reviewer 更直观地了解相关 PR 是否已经 merge，以便跳转处理。</p></div><p>下面是一个模板（<a href="https://github.com/PaddlePaddle/Paddle/pull/46615" target="_blank" rel="noreferrer">#46615</a>）：</p><div class="language-md"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Demo: https://github.com/PaddlePaddle/Paddle/pull/24810 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">### </span><span style="color:#FFCB6B;">PR types</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- One of [ New features | Bug fixes | Function optimization | Performance optimization | Breaking changes | Others ] --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Others</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">### </span><span style="color:#FFCB6B;">PR changes</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- One of [ OPs | APIs | Docs | Others ] --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Others</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">### </span><span style="color:#FFCB6B;">Describe</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- Describe what this PR does --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">修复 </span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">python/paddle/fluid/tests/unittests/collective/</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;"> 目录 F401 unused import 存量 python 代码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C3E88D;">\`\`\`</span><span style="color:#A6ACCD90;">bash</span></span>
<span class="line"><span style="color:#FFCB6B;">autoflake</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--in-place</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--remove-all-unused-imports</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--ignore-pass-after-docstring</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--exclude=__init__.py</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recursive</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./python/paddle/fluid/tests/unittests/collective/</span></span>
<span class="line"><span style="color:#C3E88D;">\`\`\`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">### </span><span style="color:#FFCB6B;">Related links</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">  Flake8 tracking issue: #46039</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">  F401 project: https://github.com/orgs/cattidea/projects/4/views/7</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">  配置文件更新: #46616</span></span>
<span class="line"><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">  fixes https://github.com/cattidea/paddle-flake8-project/issues/28</span></span>
<span class="line"></span></code></pre></div><p>这样一个 PR 就创建完成啦～</p><p>之后等 CI 查看是否出现问题即可～</p>`,44),o=[t];function c(i,r,d,y,h,C){return l(),a("div",null,o)}const g=s(p,[["render",c]]);export{D as __pageData,g as default};
